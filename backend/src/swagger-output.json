{
  "openapi": "3.0.0",
  "info": {
    "title": "Unibase API",
    "description": "API documentation for Unibase",
    "version": "1.0.0"
  },
  "servers": [
    {
      "url": "http://localhost:3000",
      "description": "Local development server"
    }
  ],
  "tags": [
    {
      "name": "Health Check",
      "description": "API health check and authentication test endpoints"
    },
    {
      "name": "Admin Users",
      "description": "User management endpoints for administrators"
    },
    {
      "name": "Auth",
      "description": "Authentication endpoints"
    },
    {
      "name": "Projects",
      "description": "Project management endpoints"
    },
    {
      "name": "Folders",
      "description": "Folder management endpoints"
    }
  ],
  "paths": {
    "/billing/webhook": {
      "post": {
        "description": "",
        "responses": {
          "default": {
            "description": ""
          }
        }
      }
    },
    "/ping/": {
      "get": {
        "tags": [
          "Health Check"
        ],
        "summary": "Basic health check",
        "description": "Returns a simple pong response to verify the API is running",
        "operationId": "ping",
        "responses": {
          "200": {
            "description": "API is running",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "message": {
                      "type": "string",
                      "example": "pong"
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/ping/auth": {
      "get": {
        "tags": [
          "Health Check"
        ],
        "summary": "Authentication check",
        "description": "Verifies that the authentication token is valid and returns user information",
        "operationId": "pingAuth",
        "parameters": [
          {
            "name": "authorization",
            "in": "header",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Token is valid",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "message": {
                      "type": "string",
                      "example": "authenticated pong"
                    },
                    "user": {
                      "type": "object",
                      "properties": {
                        "userId": {
                          "type": "string"
                        },
                        "email": {
                          "type": "string"
                        },
                        "isAdmin": {
                          "type": "boolean"
                        }
                      }
                    }
                  }
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized - Missing or invalid token",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            },
            "schema": {
              "$ref": "#/components/schemas/Error"
            }
          },
          "500": {
            "description": "Server error - JWT_SECRET not configured",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          }
        },
        "security": [
          {
            "bearerAuth": []
          }
        ]
      }
    },
    "/ping/admin": {
      "get": {
        "tags": [
          "Health Check"
        ],
        "summary": "Admin access check",
        "description": "Verifies that the user has admin privileges",
        "operationId": "pingAdmin",
        "parameters": [
          {
            "name": "authorization",
            "in": "header",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "User has admin access",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "message": {
                      "type": "string",
                      "example": "admin pong"
                    },
                    "user": {
                      "type": "object",
                      "properties": {
                        "userId": {
                          "type": "string"
                        },
                        "email": {
                          "type": "string"
                        },
                        "isAdmin": {
                          "type": "boolean"
                        }
                      }
                    }
                  }
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized - Missing or invalid token",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            },
            "schema": {
              "$ref": "#/components/schemas/Error"
            }
          },
          "403": {
            "description": "Forbidden - User is not an admin",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "500": {
            "description": "Server error - JWT_SECRET not configured",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          }
        },
        "security": [
          {
            "bearerAuth": []
          }
        ]
      }
    },
    "/users/login": {
      "post": {
        "tags": [
          "Users"
        ],
        "summary": "User login",
        "description": "Authenticates user credentials, updates last login time, and returns JWT token with user information including organizations",
        "operationId": "authenticateUserAndGetSession",
        "responses": {
          "200": {
            "description": "Login successful",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "token": {
                      "type": "string",
                      "description": "JWT token for authentication",
                      "example": "eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9..."
                    },
                    "user": {
                      "type": "object",
                      "properties": {
                        "id": {
                          "type": "string",
                          "format": "uuid"
                        },
                        "email": {
                          "type": "string",
                          "format": "email"
                        },
                        "name": {
                          "type": "string"
                        },
                        "organizations": {
                          "type": "array",
                          "items": {
                            "type": "object",
                            "properties": {
                              "id": {
                                "type": "string",
                                "format": "uuid"
                              },
                              "name": {
                                "type": "string"
                              },
                              "role": {
                                "type": "string",
                                "enum": [
                                  "owner",
                                  "admin",
                                  "member"
                                ]
                              }
                            }
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "Invalid email format",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "errors": {
                      "type": "array",
                      "items": {
                        "type": "object",
                        "properties": {
                          "msg": {
                            "type": "string"
                          },
                          "param": {
                            "type": "string"
                          },
                          "location": {
                            "type": "string"
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          },
          "401": {
            "description": "Invalid credentials",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "type": "string",
                      "example": "Invalid credentials"
                    }
                  }
                }
              }
            }
          },
          "500": {
            "description": "Server error",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "type": "string",
                      "example": "Error logging in"
                    }
                  }
                }
              }
            }
          }
        },
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "required": [
                  "email",
                  "password"
                ],
                "properties": {
                  "email": {
                    "type": "string",
                    "format": "email",
                    "example": "user@example.com"
                  },
                  "password": {
                    "type": "string",
                    "format": "password",
                    "example": "securepassword123"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/users/register": {
      "post": {
        "tags": [
          "Users"
        ],
        "summary": "Register new user",
        "description": "Creates a new user account with secure password hashing and initializes their default organization workspace",
        "operationId": "createUserAccountAndWorkspace",
        "responses": {
          "201": {
            "description": "User registered successfully",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "message": {
                      "type": "string",
                      "example": "User registered successfully"
                    },
                    "userId": {
                      "type": "string",
                      "format": "uuid",
                      "description": "The ID of the newly created user"
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "Validation error - Invalid email, password too short, or missing name",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "errors": {
                      "type": "array",
                      "items": {
                        "type": "object",
                        "properties": {
                          "msg": {
                            "type": "string",
                            "example": "Password must be at least 8 characters long"
                          },
                          "param": {
                            "type": "string",
                            "example": "password"
                          },
                          "location": {
                            "type": "string",
                            "example": "body"
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          },
          "409": {
            "description": "Email already registered",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "type": "string",
                      "example": "Email already registered"
                    }
                  }
                }
              }
            }
          },
          "500": {
            "description": "Server error during registration",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "type": "string",
                      "example": "Error registering user"
                    }
                  }
                }
              }
            }
          }
        },
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "required": [
                  "email",
                  "password",
                  "name"
                ],
                "properties": {
                  "email": {
                    "type": "string",
                    "format": "email",
                    "example": "newuser@example.com"
                  },
                  "password": {
                    "type": "string",
                    "format": "password",
                    "minLength": 8,
                    "description": "Must be at least 8 characters long",
                    "example": "securepassword123"
                  },
                  "name": {
                    "type": "string",
                    "minLength": 1,
                    "description": "User's full name",
                    "example": "John Doe"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/users/me/": {
      "get": {
        "tags": [
          "Users"
        ],
        "summary": "Get user details",
        "description": "Retrieves authenticated user details including organizations and roles",
        "operationId": "getUserDetailsWithOrganizations",
        "parameters": [
          {
            "name": "authorization",
            "in": "header",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "User details retrieved successfully",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "id": {
                      "type": "string",
                      "format": "uuid"
                    },
                    "email": {
                      "type": "string",
                      "format": "email"
                    },
                    "name": {
                      "type": "string"
                    },
                    "created_at": {
                      "type": "string",
                      "format": "date-time"
                    },
                    "updated_at": {
                      "type": "string",
                      "format": "date-time"
                    },
                    "last_login_at": {
                      "type": "string",
                      "format": "date-time",
                      "nullable": true
                    },
                    "organizations": {
                      "type": "array",
                      "items": {
                        "type": "object",
                        "properties": {
                          "id": {
                            "type": "string",
                            "format": "uuid"
                          },
                          "name": {
                            "type": "string"
                          },
                          "role": {
                            "type": "string",
                            "enum": [
                              "owner",
                              "admin",
                              "member"
                            ]
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized - Invalid token",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            },
            "schema": {
              "$ref": "#/components/schemas/Error"
            }
          },
          "500": {
            "description": "Server error - JWT_SECRET not configured",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          }
        },
        "security": [
          {
            "bearerAuth": []
          }
        ]
      }
    },
    "/folders/{folderId}/contents": {
      "get": {
        "tags": [
          "Folders"
        ],
        "summary": "Get folder contents",
        "description": "Retrieves all subfolders and projects within a specified folder",
        "operationId": "listFolderContentsAndProjects",
        "parameters": [
          {
            "name": "folderId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "ID of the folder to get contents from",
            "format": "uuid"
          },
          {
            "name": "authorization",
            "in": "header",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Folder contents retrieved successfully",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "projects": {
                      "type": "array",
                      "items": {
                        "type": "object",
                        "properties": {
                          "id": {
                            "type": "string",
                            "format": "uuid"
                          },
                          "name": {
                            "type": "string"
                          },
                          "description": {
                            "type": "string",
                            "nullable": true
                          },
                          "icon": {
                            "type": "string",
                            "nullable": true
                          },
                          "folder_id": {
                            "type": "string",
                            "format": "uuid"
                          },
                          "created_at": {
                            "type": "string",
                            "format": "date-time"
                          },
                          "updated_at": {
                            "type": "string",
                            "format": "date-time"
                          }
                        }
                      }
                    },
                    "subfolders": {
                      "type": "array",
                      "items": {
                        "type": "object",
                        "properties": {
                          "id": {
                            "type": "string",
                            "format": "uuid"
                          },
                          "name": {
                            "type": "string"
                          },
                          "path": {
                            "type": "string"
                          },
                          "parent_folder_id": {
                            "type": "string",
                            "format": "uuid",
                            "nullable": true
                          },
                          "created_at": {
                            "type": "string",
                            "format": "date-time"
                          },
                          "updated_at": {
                            "type": "string",
                            "format": "date-time"
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized - Missing or invalid token",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            },
            "schema": {
              "$ref": "#/components/schemas/Error"
            }
          },
          "403": {
            "description": "No access to organization",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "type": "string",
                      "example": "No access to this organization"
                    }
                  }
                }
              }
            }
          },
          "404": {
            "description": "Folder not found",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "type": "string",
                      "example": "Folder not found"
                    }
                  }
                }
              }
            }
          },
          "500": {
            "description": "Server error",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "type": "string",
                      "example": "Error retrieving folder contents"
                    }
                  }
                }
              }
            },
            "schema": {
              "$ref": "#/components/schemas/Error"
            }
          }
        },
        "security": [
          {
            "bearerAuth": []
          }
        ]
      }
    },
    "/folders/org/{organizationId}": {
      "get": {
        "tags": [
          "Folders"
        ],
        "summary": "Get all folders in organization",
        "description": "Retrieves all folders in an organization, ordered by folder path",
        "operationId": "listAllFoldersInOrganization",
        "parameters": [
          {
            "name": "organizationId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "ID of the organization to list folders from",
            "format": "uuid"
          },
          {
            "name": "authorization",
            "in": "header",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Folders retrieved successfully",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "type": "object",
                    "properties": {
                      "id": {
                        "type": "string",
                        "format": "uuid"
                      },
                      "name": {
                        "type": "string"
                      },
                      "path": {
                        "type": "string",
                        "description": "Full path of the folder including parent folders"
                      },
                      "parent_folder_id": {
                        "type": "string",
                        "format": "uuid",
                        "nullable": true
                      },
                      "created_at": {
                        "type": "string",
                        "format": "date-time"
                      },
                      "updated_at": {
                        "type": "string",
                        "format": "date-time"
                      }
                    }
                  }
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized - Missing or invalid token",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            },
            "schema": {
              "$ref": "#/components/schemas/Error"
            }
          },
          "403": {
            "description": "No access to organization",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "type": "string",
                      "example": "No access to this organization"
                    }
                  }
                }
              }
            }
          },
          "500": {
            "description": "Server error",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "type": "string",
                      "example": "Error fetching folders"
                    }
                  }
                }
              }
            },
            "schema": {
              "$ref": "#/components/schemas/Error"
            }
          }
        },
        "security": [
          {
            "bearerAuth": []
          }
        ]
      }
    },
    "/folders/projects/org/{organizationId}": {
      "get": {
        "tags": [
          "Folders"
        ],
        "summary": "Get all projects in organization",
        "description": "Retrieves all projects in an organization, ordered by folder path and project name",
        "operationId": "listAllProjectsInOrganization",
        "parameters": [
          {
            "name": "organizationId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "ID of the organization to list projects from",
            "format": "uuid"
          },
          {
            "name": "authorization",
            "in": "header",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Projects retrieved successfully",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "type": "object",
                    "properties": {
                      "id": {
                        "type": "string",
                        "format": "uuid"
                      },
                      "name": {
                        "type": "string"
                      },
                      "description": {
                        "type": "string",
                        "nullable": true
                      },
                      "icon": {
                        "type": "string",
                        "nullable": true
                      },
                      "folder_id": {
                        "type": "string",
                        "format": "uuid",
                        "nullable": true
                      },
                      "created_at": {
                        "type": "string",
                        "format": "date-time"
                      },
                      "updated_at": {
                        "type": "string",
                        "format": "date-time"
                      },
                      "folder_name": {
                        "type": "string",
                        "nullable": true,
                        "description": "Name of the folder containing the project"
                      },
                      "folder_path": {
                        "type": "string",
                        "nullable": true,
                        "description": "Full path of the folder containing the project"
                      }
                    }
                  }
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized - Missing or invalid token",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            },
            "schema": {
              "$ref": "#/components/schemas/Error"
            }
          },
          "403": {
            "description": "No access to organization",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "type": "string",
                      "example": "No access to this organization"
                    }
                  }
                }
              }
            }
          },
          "500": {
            "description": "Server error",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "type": "string",
                      "example": "Error fetching projects"
                    }
                  }
                }
              }
            },
            "schema": {
              "$ref": "#/components/schemas/Error"
            }
          }
        },
        "security": [
          {
            "bearerAuth": []
          }
        ]
      }
    },
    "/folders/{folderId}/hierarchy": {
      "get": {
        "tags": [
          "Folders"
        ],
        "summary": "Get folder hierarchy",
        "description": "Retrieves the complete folder hierarchy path from root to the specified folder",
        "operationId": "getFolderHierarchyPath",
        "parameters": [
          {
            "name": "folderId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "ID of the folder to get hierarchy for",
            "format": "uuid"
          },
          {
            "name": "authorization",
            "in": "header",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "organizationId",
            "in": "query",
            "description": "ID of the organization the folder belongs to",
            "required": true,
            "format": "uuid",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Folder hierarchy retrieved successfully",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "type": "object",
                    "properties": {
                      "id": {
                        "type": "string",
                        "format": "uuid"
                      },
                      "name": {
                        "type": "string"
                      },
                      "parent_folder_id": {
                        "type": "string",
                        "format": "uuid",
                        "nullable": true
                      }
                    }
                  },
                  "description": "Array of folders from root to target folder"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized - Missing or invalid token",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            },
            "schema": {
              "$ref": "#/components/schemas/Error"
            }
          },
          "403": {
            "description": "No access to organization",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "type": "string",
                      "example": "No access to this organization"
                    }
                  }
                }
              }
            }
          },
          "404": {
            "description": "Folder not found",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "type": "string",
                      "example": "Folder not found"
                    }
                  }
                }
              }
            }
          },
          "500": {
            "description": "Server error",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "type": "string",
                      "example": "Error fetching folder hierarchy"
                    }
                  }
                }
              }
            },
            "schema": {
              "$ref": "#/components/schemas/Error"
            }
          }
        },
        "security": [
          {
            "bearerAuth": []
          }
        ]
      }
    },
    "/folders/": {
      "post": {
        "tags": [
          "Folders"
        ],
        "summary": "Create new folder",
        "description": "Creates a new folder in an organization with optional parent folder, maintaining folder hierarchy and path",
        "operationId": "createFolderWithHierarchy",
        "parameters": [
          {
            "name": "authorization",
            "in": "header",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "201": {
            "description": "Folder created successfully",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "id": {
                      "type": "string",
                      "format": "uuid"
                    },
                    "name": {
                      "type": "string"
                    },
                    "path": {
                      "type": "string",
                      "description": "Full path of the folder including parent folders"
                    },
                    "parent_folder_id": {
                      "type": "string",
                      "format": "uuid",
                      "nullable": true
                    },
                    "created_at": {
                      "type": "string",
                      "format": "date-time"
                    },
                    "updated_at": {
                      "type": "string",
                      "format": "date-time"
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "Validation error or maximum nesting depth exceeded",
            "content": {
              "application/json": {
                "schema": {
                  "oneOf": [
                    {
                      "type": "object",
                      "properties": {
                        "errors": {
                          "type": "array",
                          "items": {
                            "type": "object",
                            "properties": {
                              "msg": {
                                "type": "string"
                              },
                              "param": {
                                "type": "string"
                              },
                              "location": {
                                "type": "string"
                              }
                            }
                          }
                        }
                      }
                    },
                    {
                      "type": "object",
                      "properties": {
                        "error": {
                          "type": "string",
                          "example": "Maximum folder nesting depth (4) exceeded"
                        }
                      }
                    }
                  ]
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized - Missing or invalid token",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            },
            "schema": {
              "$ref": "#/components/schemas/Error"
            }
          },
          "403": {
            "description": "No access to organization",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "type": "string",
                      "example": "No access to this organization"
                    }
                  }
                }
              }
            }
          },
          "404": {
            "description": "Parent folder not found",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "type": "string",
                      "example": "Parent folder not found"
                    }
                  }
                }
              }
            }
          },
          "500": {
            "description": "Server error",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "type": "string",
                      "example": "Error creating folder"
                    }
                  }
                }
              }
            },
            "schema": {
              "$ref": "#/components/schemas/Error"
            }
          }
        },
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "required": [
                  "name",
                  "organizationId"
                ],
                "properties": {
                  "name": {
                    "type": "string",
                    "minLength": 1,
                    "example": "My New Folder"
                  },
                  "organizationId": {
                    "type": "string",
                    "format": "uuid",
                    "description": "ID of the organization to create the folder in"
                  },
                  "parentFolderId": {
                    "type": "string",
                    "format": "uuid",
                    "description": "Optional parent folder ID for nesting (max depth: 4)",
                    "nullable": true
                  }
                }
              }
            }
          }
        }
      }
    },
    "/folders/{folderId}": {
      "delete": {
        "tags": [
          "Folders"
        ],
        "summary": "Delete folder",
        "description": "Deletes a folder if the authenticated user has owner or admin role in the organization",
        "operationId": "deleteFolderByOwnerOrAdmin",
        "parameters": [
          {
            "name": "folderId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "ID of the folder to delete",
            "format": "uuid"
          },
          {
            "name": "authorization",
            "in": "header",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Folder deleted successfully",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "message": {
                      "type": "string",
                      "example": "Folder deleted successfully"
                    }
                  }
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized - Missing or invalid token",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            },
            "schema": {
              "$ref": "#/components/schemas/Error"
            }
          },
          "403": {
            "description": "Forbidden - No access or insufficient role",
            "content": {
              "application/json": {
                "schema": {
                  "oneOf": [
                    {
                      "type": "object",
                      "properties": {
                        "error": {
                          "type": "string",
                          "example": "No access to this folder"
                        }
                      }
                    },
                    {
                      "type": "object",
                      "properties": {
                        "error": {
                          "type": "string",
                          "example": "No permission to delete this folder"
                        }
                      }
                    }
                  ]
                }
              }
            }
          },
          "404": {
            "description": "Folder not found",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "type": "string",
                      "example": "Folder not found"
                    }
                  }
                }
              }
            }
          },
          "500": {
            "description": "Server error",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "type": "string",
                      "example": "Error deleting folder"
                    }
                  }
                }
              }
            },
            "schema": {
              "$ref": "#/components/schemas/Error"
            }
          }
        },
        "security": [
          {
            "bearerAuth": []
          }
        ]
      }
    },
    "/projects/{projectId}/code/file": {
      "get": {
        "tags": [
          "Projects"
        ],
        "summary": "Get a specific JS file from a project",
        "description": "Retrieve a specific JavaScript file associated with a project by filename and optional filepath.",
        "operationId": "getFile",
        "parameters": [
          {
            "name": "projectId",
            "in": "path",
            "description": "The ID of the project",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "authorization",
            "in": "header",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "JS file retrieved successfully",
            "content": {
              "application/javascript": {
                "schema": {
                  "type": "string",
                  "description": "The JavaScript file content"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized - Invalid token",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            },
            "schema": {
              "$ref": "#/components/schemas/Error"
            }
          },
          "404": {
            "description": "File not found"
          },
          "500": {
            "description": "Server error - JWT_SECRET not configured",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          }
        },
        "security": [
          {
            "bearerAuth": []
          }
        ]
      }
    },
    "/projects/code/{workspaceName}/{projectName}/dev": {
      "get": {
        "tags": [
          "Projects"
        ],
        "summary": "Get index.js from a project in a workspace",
        "description": "Retrieve the index.js file from a specified project in a workspace.",
        "operationId": "getProjectIndexByWorkspaceAndProject",
        "parameters": [
          {
            "name": "workspaceName",
            "in": "path",
            "description": "The name of the workspace",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "projectName",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "authorization",
            "in": "header",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "JS file retrieved successfully",
            "content": {
              "application/javascript": {
                "schema": {
                  "type": "string",
                  "description": "The JavaScript file content"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized - Invalid token",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            },
            "schema": {
              "$ref": "#/components/schemas/Error"
            }
          },
          "404": {
            "description": "Workspace, project, or file not found"
          },
          "500": {
            "description": "Server error - JWT_SECRET not configured",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          }
        },
        "security": [
          {
            "bearerAuth": []
          }
        ]
      }
    },
    "/projects/code/{workspaceName}/{projectName}/{filename@dev.js}": {
      "get": {
        "tags": [
          "Projects"
        ],
        "summary": "Get a specific file from a project in a workspace",
        "description": "Retrieve a specific JavaScript file from a project in a workspace using the @dev.js suffix.",
        "operationId": "getProjectFileByWorkspaceAndProject",
        "parameters": [
          {
            "name": "workspaceName",
            "in": "path",
            "description": "The name of the workspace",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "projectName",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "filename@dev.js",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "authorization",
            "in": "header",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "JS file retrieved successfully",
            "content": {
              "application/javascript": {
                "schema": {
                  "type": "string",
                  "description": "The JavaScript file content"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized - Invalid token",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            },
            "schema": {
              "$ref": "#/components/schemas/Error"
            }
          },
          "404": {
            "description": "Workspace, project, or file not found"
          },
          "500": {
            "description": "Server error - JWT_SECRET not configured",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          }
        },
        "security": [
          {
            "bearerAuth": []
          }
        ]
      }
    },
    "/projects/code/{workspaceName}/dev": {
      "get": {
        "tags": [
          "Projects"
        ],
        "summary": "Get index.js from the default project in a workspace",
        "description": "Retrieve the index.js file from the project named \"index\" in the specified workspace.",
        "operationId": "getDefaultProjectIndexByWorkspace",
        "parameters": [
          {
            "name": "workspaceName",
            "in": "path",
            "description": "The name of the workspace",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "authorization",
            "in": "header",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "JS file retrieved successfully",
            "content": {
              "application/javascript": {
                "schema": {
                  "type": "string",
                  "description": "The JavaScript file content"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized - Invalid token",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            },
            "schema": {
              "$ref": "#/components/schemas/Error"
            }
          },
          "404": {
            "description": "Workspace, default project, or file not found"
          },
          "500": {
            "description": "Server error - JWT_SECRET not configured",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          }
        },
        "security": [
          {
            "bearerAuth": []
          }
        ]
      }
    },
    "/projects/": {
      "post": {
        "tags": [
          "Projects"
        ],
        "summary": "Create new project",
        "description": "Creates a new project in an organization with an optional folder, and initializes a default conversation.",
        "operationId": "createProjectWithConversation",
        "parameters": [
          {
            "name": "authorization",
            "in": "header",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "201": {
            "description": "Project created successfully",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "id": {
                      "type": "string",
                      "format": "uuid"
                    },
                    "name": {
                      "type": "string"
                    },
                    "description": {
                      "type": "string",
                      "nullable": true
                    },
                    "folder_id": {
                      "type": "string",
                      "format": "uuid",
                      "nullable": true
                    },
                    "icon": {
                      "type": "string"
                    },
                    "created_at": {
                      "type": "string",
                      "format": "date-time"
                    },
                    "updated_at": {
                      "type": "string",
                      "format": "date-time"
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "Validation error or invalid folder",
            "content": {
              "application/json": {
                "schema": {
                  "oneOf": [
                    {
                      "type": "object",
                      "properties": {
                        "errors": {
                          "type": "array",
                          "items": {
                            "type": "object",
                            "properties": {
                              "msg": {
                                "type": "string"
                              },
                              "param": {
                                "type": "string"
                              },
                              "location": {
                                "type": "string"
                              }
                            }
                          }
                        }
                      }
                    },
                    {
                      "type": "object",
                      "properties": {
                        "error": {
                          "type": "string",
                          "example": "Folder not found"
                        }
                      }
                    }
                  ]
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized - Invalid token",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            },
            "schema": {
              "$ref": "#/components/schemas/Error"
            }
          },
          "403": {
            "description": "No access to organization or folder",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "type": "string",
                      "example": "No access to this organization"
                    }
                  }
                }
              }
            }
          },
          "500": {
            "description": "Server error - JWT_SECRET not configured",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            },
            "schema": {
              "$ref": "#/components/schemas/Error"
            }
          }
        },
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "required": [
                  "name",
                  "organizationId"
                ],
                "properties": {
                  "name": {
                    "type": "string",
                    "example": "My New Project"
                  },
                  "organizationId": {
                    "type": "string",
                    "format": "uuid",
                    "description": "ID of the organization to create the project in"
                  },
                  "description": {
                    "type": "string",
                    "example": "A detailed description of my project"
                  },
                  "folderId": {
                    "type": "string",
                    "format": "uuid",
                    "description": "Optional folder ID to place the project in"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/projects/{projectId}": {
      "get": {
        "tags": [
          "Projects"
        ],
        "summary": "Get project details",
        "description": "Retrieves detailed project information including folder path and creator details",
        "operationId": "getProjectWithFolderInfo",
        "parameters": [
          {
            "name": "projectId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "ID of the project to retrieve",
            "format": "uuid"
          },
          {
            "name": "authorization",
            "in": "header",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Project details retrieved successfully",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "id": {
                      "type": "string",
                      "format": "uuid"
                    },
                    "name": {
                      "type": "string"
                    },
                    "description": {
                      "type": "string",
                      "nullable": true
                    },
                    "organization_id": {
                      "type": "string",
                      "format": "uuid"
                    },
                    "folder_id": {
                      "type": "string",
                      "format": "uuid",
                      "nullable": true
                    },
                    "icon": {
                      "type": "string"
                    },
                    "created_at": {
                      "type": "string",
                      "format": "date-time"
                    },
                    "updated_at": {
                      "type": "string",
                      "format": "date-time"
                    },
                    "folder_name": {
                      "type": "string",
                      "nullable": true
                    },
                    "folder_path": {
                      "type": "string",
                      "nullable": true
                    },
                    "created_by_name": {
                      "type": "string"
                    }
                  }
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized - Invalid token",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            },
            "schema": {
              "$ref": "#/components/schemas/Error"
            }
          },
          "403": {
            "description": "No access to project",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "type": "string",
                      "example": "No access to this project"
                    }
                  }
                }
              }
            }
          },
          "404": {
            "description": "Project not found",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "type": "string",
                      "example": "Project not found"
                    }
                  }
                }
              }
            }
          },
          "500": {
            "description": "Server error - JWT_SECRET not configured",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            },
            "schema": {
              "$ref": "#/components/schemas/Error"
            }
          }
        },
        "security": [
          {
            "bearerAuth": []
          }
        ]
      },
      "put": {
        "tags": [
          "Projects"
        ],
        "summary": "Update project details",
        "description": "Updates project information including name, description, icon, folder location, and training status",
        "operationId": "updateProjectAttributes",
        "parameters": [
          {
            "name": "projectId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "ID of the project to update",
            "format": "uuid"
          },
          {
            "name": "authorization",
            "in": "header",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Project updated successfully",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "id": {
                      "type": "string",
                      "format": "uuid"
                    },
                    "name": {
                      "type": "string"
                    },
                    "description": {
                      "type": "string",
                      "nullable": true
                    },
                    "icon": {
                      "type": "string"
                    },
                    "folder_id": {
                      "type": "string",
                      "format": "uuid",
                      "nullable": true
                    },
                    "created_at": {
                      "type": "string",
                      "format": "date-time"
                    },
                    "updated_at": {
                      "type": "string",
                      "format": "date-time"
                    },
                    "folder_name": {
                      "type": "string",
                      "nullable": true
                    },
                    "folder_path": {
                      "type": "string",
                      "nullable": true
                    },
                    "use_for_training": {
                      "type": "boolean",
                      "description": "Whether this project is used for training data"
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "Validation error or invalid folder",
            "content": {
              "application/json": {
                "schema": {
                  "oneOf": [
                    {
                      "type": "object",
                      "properties": {
                        "errors": {
                          "type": "array",
                          "items": {
                            "type": "object",
                            "properties": {
                              "msg": {
                                "type": "string"
                              },
                              "param": {
                                "type": "string"
                              },
                              "location": {
                                "type": "string"
                              }
                            }
                          }
                        }
                      }
                    },
                    {
                      "type": "object",
                      "properties": {
                        "error": {
                          "type": "string",
                          "example": "Folder not found"
                        }
                      }
                    }
                  ]
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized - Invalid token",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            },
            "schema": {
              "$ref": "#/components/schemas/Error"
            }
          },
          "403": {
            "description": "No access to project or folder",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "type": "string",
                      "example": "No access to this organization"
                    }
                  }
                }
              }
            }
          },
          "404": {
            "description": "Project not found",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "type": "string",
                      "example": "Project not found"
                    }
                  }
                }
              }
            }
          },
          "500": {
            "description": "Server error - JWT_SECRET not configured",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            },
            "schema": {
              "$ref": "#/components/schemas/Error"
            }
          }
        },
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "name": {
                    "type": "string",
                    "minLength": 1,
                    "example": "Updated Project Name"
                  },
                  "description": {
                    "type": "string",
                    "example": "Updated project description"
                  },
                  "icon": {
                    "type": "string",
                    "minLength": 1,
                    "example": "cube"
                  },
                  "folder_id": {
                    "type": "string",
                    "format": "uuid",
                    "nullable": true,
                    "description": "New folder ID or null to move to root"
                  },
                  "use_for_training": {
                    "type": "boolean",
                    "description": "Whether to use this project for training data",
                    "example": true
                  },
                  "already_trained": {
                    "type": "boolean",
                    "description": "Whether this project has been used as training data",
                    "example": false
                  },
                  "trained_at": {
                    "type": "string",
                    "description": "Timestamp when the project was used for training",
                    "example": "2025-04-05T10:30:00Z"
                  }
                }
              }
            }
          }
        }
      },
      "delete": {
        "tags": [
          "Projects"
        ],
        "summary": "Delete project",
        "description": "Deletes a project and all its associated data (conversations, messages) in a transaction",
        "operationId": "deleteProjectAndAssociatedData",
        "parameters": [
          {
            "name": "projectId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "ID of the project to delete",
            "format": "uuid"
          },
          {
            "name": "authorization",
            "in": "header",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "204": {
            "description": "Project deleted successfully"
          },
          "401": {
            "description": "Unauthorized - Invalid token",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            },
            "schema": {
              "$ref": "#/components/schemas/Error"
            }
          },
          "403": {
            "description": "No access to project",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "type": "string",
                      "example": "No access to this organization"
                    }
                  }
                }
              }
            }
          },
          "404": {
            "description": "Project not found",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "type": "string",
                      "example": "Project not found"
                    }
                  }
                }
              }
            }
          },
          "500": {
            "description": "Server error - JWT_SECRET not configured",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            },
            "schema": {
              "$ref": "#/components/schemas/Error"
            }
          }
        },
        "security": [
          {
            "bearerAuth": []
          }
        ]
      }
    },
    "/projects/org/{organizationId}": {
      "get": {
        "tags": [
          "Projects"
        ],
        "summary": "List organization projects",
        "description": "Retrieves all projects in an organization with their folder information, ordered by folder path and name",
        "operationId": "listProjectsInOrganization",
        "parameters": [
          {
            "name": "organizationId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "ID of the organization to list projects from",
            "format": "uuid"
          },
          {
            "name": "authorization",
            "in": "header",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Projects retrieved successfully",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "type": "object",
                    "properties": {
                      "id": {
                        "type": "string",
                        "format": "uuid"
                      },
                      "name": {
                        "type": "string"
                      },
                      "description": {
                        "type": "string",
                        "nullable": true
                      },
                      "icon": {
                        "type": "string"
                      },
                      "folder_id": {
                        "type": "string",
                        "format": "uuid",
                        "nullable": true
                      },
                      "created_at": {
                        "type": "string",
                        "format": "date-time"
                      },
                      "updated_at": {
                        "type": "string",
                        "format": "date-time"
                      },
                      "folder_name": {
                        "type": "string",
                        "nullable": true
                      },
                      "folder_path": {
                        "type": "string",
                        "nullable": true
                      }
                    }
                  }
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized - Invalid token",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            },
            "schema": {
              "$ref": "#/components/schemas/Error"
            }
          },
          "403": {
            "description": "No access to organization",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "type": "string",
                      "example": "No access to this organization"
                    }
                  }
                }
              }
            }
          },
          "500": {
            "description": "Server error - JWT_SECRET not configured",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            },
            "schema": {
              "$ref": "#/components/schemas/Error"
            }
          }
        },
        "security": [
          {
            "bearerAuth": []
          }
        ]
      }
    },
    "/projects/{projectId}/scad": {
      "get": {
        "tags": [
          "Projects"
        ],
        "summary": "Get latest SCAD object for a project",
        "description": "Get the latest SCAD object for a project. If no objects exist, return an empty string.",
        "operationId": "getProjectScad",
        "parameters": [
          {
            "name": "projectId",
            "in": "path",
            "description": "The ID of the project",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "authorization",
            "in": "header",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Latest SCAD object retrieved successfully",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "scad": {
                      "type": "string",
                      "description": "The SCAD object content. Empty string if no objects exist."
                    }
                  }
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized - Invalid token",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            },
            "schema": {
              "$ref": "#/components/schemas/Error"
            }
          },
          "500": {
            "description": "Server error - JWT_SECRET not configured",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            },
            "schema": {
              "$ref": "#/components/schemas/Error"
            }
          }
        },
        "security": [
          {
            "bearerAuth": []
          }
        ]
      },
      "put": {
        "tags": [
          "Projects"
        ],
        "summary": "Update SCAD object for a project",
        "description": "Update the SCAD object for a project. Creates a new object if none exists.",
        "operationId": "updateProjectScad",
        "parameters": [
          {
            "name": "projectId",
            "in": "path",
            "description": "The ID of the project",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "authorization",
            "in": "header",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "SCAD object updated successfully",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "scad": {
                      "type": "string",
                      "description": "The updated SCAD object content"
                    }
                  }
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized - Invalid token",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            },
            "schema": {
              "$ref": "#/components/schemas/Error"
            }
          },
          "500": {
            "description": "Server error - JWT_SECRET not configured",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            },
            "schema": {
              "$ref": "#/components/schemas/Error"
            }
          }
        },
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "required": [
                  "scad"
                ],
                "properties": {
                  "scad": {
                    "type": "string",
                    "description": "The SCAD object content"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/projects/{projectId}/code": {
      "get": {
        "tags": [
          "Projects"
        ],
        "summary": "Get all code objects for a project",
        "description": "Retrieve all JavaScript objects associated with a project. If no objects exist, return an empty array.",
        "operationId": "getProjectCode",
        "parameters": [
          {
            "name": "projectId",
            "in": "path",
            "description": "The ID of the project",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "authorization",
            "in": "header",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Code objects retrieved successfully",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "objects": {
                      "type": "array",
                      "description": "An array of JavaScript objects",
                      "items": {
                        "type": "object",
                        "properties": {
                          "id": {
                            "type": "string",
                            "description": "Object ID"
                          },
                          "object": {
                            "type": "string",
                            "description": "The JavaScript object content"
                          },
                          "created_at": {
                            "type": "string",
                            "format": "date-time",
                            "description": "Timestamp when the object was created"
                          },
                          "updated_at": {
                            "type": "string",
                            "format": "date-time",
                            "description": "Timestamp when the object was last updated"
                          },
                          "project_id": {
                            "type": "string",
                            "description": "ID of the project this object belongs to"
                          },
                          "filename": {
                            "type": "string",
                            "description": "Filename of the object"
                          },
                          "filepath": {
                            "type": "string",
                            "description": "Filepath of the object"
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized - Invalid token",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            },
            "schema": {
              "$ref": "#/components/schemas/Error"
            }
          },
          "500": {
            "description": "Server error - JWT_SECRET not configured",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            },
            "schema": {
              "$ref": "#/components/schemas/Error"
            }
          }
        },
        "security": [
          {
            "bearerAuth": []
          }
        ]
      },
      "put": {
        "tags": [
          "Projects"
        ],
        "summary": "Update code object for a project",
        "description": "Update a JavaScript code object for a project. Creates a new object if id is not provided.",
        "operationId": "updateProjectCode",
        "parameters": [
          {
            "name": "projectId",
            "in": "path",
            "description": "The ID of the project",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "authorization",
            "in": "header",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Code object updated successfully",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "object": {
                      "type": "object",
                      "properties": {
                        "id": {
                          "type": "string",
                          "description": "The object ID"
                        },
                        "object": {
                          "type": "string",
                          "description": "The JavaScript code content"
                        },
                        "created_at": {
                          "type": "string",
                          "format": "date-time",
                          "description": "Creation timestamp"
                        },
                        "updated_at": {
                          "type": "string",
                          "format": "date-time",
                          "description": "Last update timestamp"
                        },
                        "project_id": {
                          "type": "string",
                          "description": "The project ID"
                        },
                        "filename": {
                          "type": "string",
                          "description": "Filename of the object"
                        },
                        "filepath": {
                          "type": "string",
                          "description": "Filepath of the object"
                        }
                      }
                    }
                  }
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized - Invalid token",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            },
            "schema": {
              "$ref": "#/components/schemas/Error"
            }
          },
          "500": {
            "description": "Server error - JWT_SECRET not configured",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            },
            "schema": {
              "$ref": "#/components/schemas/Error"
            }
          }
        },
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "required": [
                  "object"
                ],
                "properties": {
                  "object": {
                    "type": "string",
                    "description": "The JavaScript code content"
                  },
                  "id": {
                    "type": "string",
                    "description": "Optional ID of an existing object to update"
                  },
                  "filename": {
                    "type": "string",
                    "description": "Optional filename for the code object"
                  },
                  "filepath": {
                    "type": "string",
                    "description": "Optional filepath for the code object"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/projects/code/{objectId}": {
      "delete": {
        "tags": [
          "Projects"
        ],
        "summary": "Delete code object for a project",
        "description": "Deletes a JavaScript code object from a project. Requires project access permissions.",
        "operationId": "deleteProjectCode",
        "parameters": [
          {
            "name": "objectId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "ID of the code object to delete",
            "format": "uuid"
          },
          {
            "name": "authorization",
            "in": "header",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Code object deleted successfully",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "message": {
                      "type": "string",
                      "example": "Code object deleted successfully"
                    }
                  }
                }
              }
            }
          },
          "401": {
            "description": "User not authenticated",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "type": "string",
                      "example": "Unauthorized"
                    }
                  }
                }
              }
            },
            "schema": {
              "$ref": "#/components/schemas/Error"
            }
          },
          "403": {
            "description": "No access to project",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "type": "string",
                      "example": "No access to this project"
                    }
                  }
                }
              }
            }
          },
          "404": {
            "description": "Code object not found",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "type": "string",
                      "example": "Code object not found"
                    }
                  }
                }
              }
            }
          },
          "500": {
            "description": "Server error - JWT_SECRET not configured",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            },
            "schema": {
              "$ref": "#/components/schemas/Error"
            }
          }
        },
        "security": [
          {
            "bearerAuth": []
          }
        ]
      }
    },
    "/admin/users/": {
      "get": {
        "description": "",
        "parameters": [
          {
            "name": "authorization",
            "in": "header",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "401": {
            "description": "Unauthorized - Authentication required",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            },
            "schema": {
              "$ref": "#/components/schemas/Error"
            }
          },
          "403": {
            "description": "Forbidden - Admin access required",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "500": {
            "description": "Server error - JWT_SECRET not configured",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            },
            "schema": {
              "$ref": "#/components/schemas/Error"
            }
          }
        },
        "security": [
          {
            "bearerAuth": []
          }
        ]
      }
    },
    "/admin/users/{userId}/role": {
      "put": {
        "description": "",
        "parameters": [
          {
            "name": "userId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "authorization",
            "in": "header",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          },
          "400": {
            "description": "Bad Request"
          },
          "401": {
            "description": "Unauthorized - Authentication required",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            },
            "schema": {
              "$ref": "#/components/schemas/Error"
            }
          },
          "403": {
            "description": "Forbidden - Admin access required",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "404": {
            "description": "Not Found"
          },
          "500": {
            "description": "Server error - JWT_SECRET not configured",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            },
            "schema": {
              "$ref": "#/components/schemas/Error"
            }
          }
        },
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "isAdmin": {
                    "example": "any"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/admin/users/{userId}": {
      "delete": {
        "description": "",
        "parameters": [
          {
            "name": "userId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "authorization",
            "in": "header",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "401": {
            "description": "Unauthorized - Authentication required",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            },
            "schema": {
              "$ref": "#/components/schemas/Error"
            }
          },
          "403": {
            "description": "Forbidden - Admin access required",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "500": {
            "description": "Server error - JWT_SECRET not configured",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            },
            "schema": {
              "$ref": "#/components/schemas/Error"
            }
          }
        },
        "security": [
          {
            "bearerAuth": []
          }
        ]
      }
    },
    "/chat/llm/{projectId}/generate-objects": {
      "post": {
        "tags": [
          "Chat"
        ],
        "summary": "Generate 3D objects based on natural language instructions",
        "description": "Uses LLM-based AI models to generate 3D objects and scene state based on text instructions",
        "operationId": "generateObjects",
        "parameters": [
          {
            "name": "projectId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "ID of the project to generate objects for",
            "format": "uuid"
          },
          {
            "name": "authorization",
            "in": "header",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Objects generated successfully",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "messages": {
                      "type": "array",
                      "description": "Chat messages generated during the process",
                      "items": {
                        "type": "object",
                        "properties": {
                          "role": {
                            "type": "string",
                            "enum": [
                              "user",
                              "assistant",
                              "tool"
                            ]
                          },
                          "content": {
                            "type": "string"
                          },
                          "tool_calls": {
                            "type": "array",
                            "items": {
                              "type": "object"
                            },
                            "nullable": true
                          },
                          "tool_outputs": {
                            "type": "array",
                            "items": {
                              "type": "object"
                            },
                            "nullable": true
                          }
                        }
                      }
                    },
                    "jsContent": {
                      "type": "string",
                      "description": "JavaScript/ThreeJS content for the generated objects"
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "Invalid request parameters",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "type": "string",
                      "example": "Instructions are required"
                    }
                  }
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized - Missing or invalid token",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "type": "string",
                      "example": "User not authenticated"
                    }
                  }
                }
              }
            },
            "schema": {
              "$ref": "#/components/schemas/Error"
            }
          },
          "403": {
            "description": "Forbidden - No access to project",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "type": "string",
                      "example": "No access to this project"
                    }
                  }
                }
              }
            }
          },
          "404": {
            "description": "Project not found",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "type": "string",
                      "example": "Project not found"
                    }
                  }
                }
              }
            }
          },
          "500": {
            "description": "Server error",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "type": "string",
                      "example": "Error generating objects"
                    },
                    "details": {
                      "type": "string",
                      "description": "Additional error details if available"
                    }
                  }
                }
              }
            },
            "schema": {
              "$ref": "#/components/schemas/Error"
            }
          }
        },
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "required": [
                  "instructions"
                ],
                "properties": {
                  "instructions": {
                    "type": "string",
                    "minLength": 1,
                    "example": "Create a 3D object based on the instructions"
                  },
                  "base64Image": {
                    "type": "string",
                    "format": "base64",
                    "description": "Base64 encoded image of the object"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/chat/history/{projectId}/history": {
      "get": {
        "tags": [
          "Chat"
        ],
        "summary": "Get chat history for a project",
        "description": "Returns the conversation history including messages and generated objects",
        "operationId": "getChatHistory",
        "parameters": [
          {
            "name": "projectId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "ID of the project to get history for",
            "format": "uuid"
          },
          {
            "name": "authorization",
            "in": "header",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Chat history retrieved successfully",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "type": "object",
                    "properties": {
                      "id": {
                        "type": "string",
                        "format": "uuid"
                      },
                      "role": {
                        "type": "string",
                        "enum": [
                          "user",
                          "assistant",
                          "tool"
                        ]
                      },
                      "content": {
                        "type": "string"
                      },
                      "tool_calls": {
                        "type": "array",
                        "items": {
                          "type": "object",
                          "properties": {
                            "id": {
                              "type": "string"
                            },
                            "type": {
                              "type": "string",
                              "enum": [
                                "function"
                              ]
                            },
                            "function": {
                              "type": "object",
                              "properties": {
                                "name": {
                                  "type": "string"
                                },
                                "arguments": {
                                  "type": "string"
                                }
                              }
                            }
                          }
                        },
                        "nullable": true
                      },
                      "tool_call_id": {
                        "type": "string",
                        "nullable": true
                      },
                      "object_id": {
                        "type": "string",
                        "format": "uuid",
                        "nullable": true
                      },
                      "created_at": {
                        "type": "string",
                        "format": "date-time"
                      },
                      "error": {
                        "type": "string",
                        "nullable": true
                      }
                    }
                  }
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized - Invalid token",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            },
            "schema": {
              "$ref": "#/components/schemas/Error"
            }
          },
          "500": {
            "description": "Server error - JWT_SECRET not configured",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            },
            "schema": {
              "$ref": "#/components/schemas/Error"
            }
          }
        },
        "security": [
          {
            "bearerAuth": []
          }
        ]
      }
    },
    "/billing/create-checkout-session/": {
      "post": {
        "tags": [
          "Billing"
        ],
        "summary": "Create Stripe Checkout session",
        "description": "Creates a new Stripe Checkout session for subscription",
        "operationId": "createCheckoutSession",
        "parameters": [
          {
            "name": "authorization",
            "in": "header",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "401": {
            "description": "Unauthorized - Invalid token",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            },
            "schema": {
              "$ref": "#/components/schemas/Error"
            }
          },
          "500": {
            "description": "Server error - JWT_SECRET not configured",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            },
            "schema": {
              "$ref": "#/components/schemas/Error"
            }
          }
        },
        "security": [
          {
            "bearerAuth": []
          }
        ]
      }
    },
    "/billing/create-portal-session/": {
      "post": {
        "tags": [
          "Billing"
        ],
        "summary": "Create Stripe Customer Portal session",
        "description": "Creates a new Stripe Customer Portal session for managing subscription",
        "operationId": "createPortalSession",
        "parameters": [
          {
            "name": "authorization",
            "in": "header",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "401": {
            "description": "Unauthorized - Invalid token",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            },
            "schema": {
              "$ref": "#/components/schemas/Error"
            }
          },
          "500": {
            "description": "Server error - JWT_SECRET not configured",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            },
            "schema": {
              "$ref": "#/components/schemas/Error"
            }
          }
        },
        "security": [
          {
            "bearerAuth": []
          }
        ]
      }
    }
  },
  "components": {
    "securitySchemes": {
      "bearerAuth": {
        "type": "http",
        "scheme": "bearer",
        "bearerFormat": "JWT"
      }
    },
    "schemas": {
      "Error": {
        "type": "object",
        "properties": {
          "type": {
            "type": "string",
            "example": "object"
          },
          "properties": {
            "type": "object",
            "properties": {
              "error": {
                "type": "object",
                "properties": {
                  "type": {
                    "type": "string",
                    "example": "string"
                  }
                }
              }
            }
          }
        },
        "xml": {
          "name": "Error"
        }
      },
      "AuthenticatedRequest": {
        "type": "object",
        "properties": {
          "type": {
            "type": "string",
            "example": "object"
          },
          "properties": {
            "type": "object",
            "properties": {
              "headers": {
                "type": "object",
                "properties": {
                  "type": {
                    "type": "string",
                    "example": "object"
                  },
                  "properties": {
                    "type": "object",
                    "properties": {
                      "Authorization": {
                        "type": "object",
                        "properties": {
                          "type": {
                            "type": "string",
                            "example": "string"
                          },
                          "description": {
                            "type": "string",
                            "example": "Bearer token"
                          },
                          "example": {
                            "type": "string",
                            "example": "Bearer <token>"
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        },
        "xml": {
          "name": "AuthenticatedRequest"
        }
      }
    }
  }
}