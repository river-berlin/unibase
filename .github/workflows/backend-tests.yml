name: Backend Tests

on:
  push:
    branches: [ main ]
    paths:
      - 'app/backend/**'
  pull_request:
    branches: [ main ]
    paths:
      - 'app/backend/**'

jobs:
  test:
    runs-on: ubuntu-latest

    services:
      minio:
        image: minio/minio:latest
        env:
          MINIO_ROOT_USER: minioadmin
          MINIO_ROOT_PASSWORD: minioadmin
        ports:
          - 9000:9000
          - 9001:9001
        options: >-
          --health-cmd "curl -f http://localhost:9000/minio/health/live"
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5
        volumes:
          - /data
        command: server /data --console-address ":9001"

    steps:
      - uses: actions/checkout@v4

      - name: Set up Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '20'
          cache: 'npm'
          cache-dependency-path: app/backend/package-lock.json

      - name: Install dependencies
        working-directory: app/backend
        run: npm ci

      - name: Generate Prisma Client
        working-directory: app/backend
        run: npx prisma generate

      - name: Run tests
        working-directory: app/backend
        env:
          DATABASE_URL: file:./prisma/test.db
          JWT_SECRET: test-secret-key
          NODE_ENV: test
          S3_ENDPOINT: http://localhost:9000
          AWS_ACCESS_KEY_ID: minioadmin
          AWS_SECRET_ACCESS_KEY: minioadmin
          AWS_REGION: us-east-1
        run: npm test

      - name: Upload test results
        uses: dorny/test-reporter@v1
        if: success() || failure()
        with:
          name: Backend Tests
          path: app/backend/junit.xml
          reporter: jest-junit 