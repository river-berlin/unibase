services:
  frontend:
    build:
      context: ./app/frontend
      dockerfile: Dockerfile
    ports:
      - "8081:8081"
    volumes:
      - ./app/frontend:/app
      - ./app/backend-js-api:/backend-js-api
      - /app/node_modules
      - /backend-js-api/node_modules
    environment:
      - NODE_ENV=${NODE_ENV:-development}
      - EXPO_PUBLIC_API_URL=http://localhost:3002
    depends_on:
      - backend

  backend:
    build:
      context: ./app/backend
      dockerfile: Dockerfile
    ports:
      - "3002:3002"
    volumes:
      - ./app/backend:/app
      - sqlite-data:/data
    environment:
      - GEMINI_API_KEY=${GEMINI_API_KEY}
      - PORT=3002
      - NODE_ENV=${NODE_ENV:-development}
      - JWT_SECRET=${JWT_SECRET}
      - S3_ENDPOINT=http://minio:9000
      - AWS_ACCESS_KEY_ID=${AWS_ACCESS_KEY_ID:-minioadmin}
      - AWS_SECRET_ACCESS_KEY=${AWS_SECRET_ACCESS_KEY:-minioadmin}
      - AWS_REGION=${AWS_REGION:-us-east-1}
      - STRIPE_SECRET_KEY=${STRIPE_SECRET_KEY}
      - STRIPE_MONTHLY_PRICE_ID=${STRIPE_MONTHLY_PRICE_ID}
    depends_on:
      - minio

  minio:
    image: minio/minio:latest
    environment:
      - MINIO_ROOT_USER=${MINIO_ROOT_USER:-minioadmin}
      - MINIO_ROOT_PASSWORD=${MINIO_ROOT_PASSWORD:-minioadmin}
    ports:
      - "9000:9000"
      - "9001:9001"
    command: server /data --console-address ":9001"
    volumes:
      - minio-data:/data
    restart: unless-stopped

volumes:
  minio-data:
  sqlite-data: 